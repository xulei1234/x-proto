// protoc --go_out=. --go_opt=paths=source_relative \
//       --go-grpc_out=. --go-grpc_opt=paths=source_relative \
//       xps/*.proto
syntax = "proto3";

package xps;

option go_package = "github.com/xulei1234/x-proto/xps;xps";

import "common.proto";

service XService {
  // 注册agent节点
  rpc RegisterAgent(RegRequest) returns (Empty) {}
  // 心跳上报客户端状态
  rpc ReportHBS(HBSRequest) returns (Empty) {}
  rpc Config(ConfigRequest) returns (ConfigReply) {}
  // 获取需要执行的任务, 通常是命令, 应保持流式推送，客户端不应主动关闭
  rpc Command(Empty) returns (stream CmdReply) {}
  // 日志上传,以行或字节切分上传
  rpc Log(LogRequest) returns (Empty) {}
  // 一般信息上报
  rpc Msg(MsgRequest) returns (Empty) {}
}

message RegRequest {
  string hostname = 1; // 主机名
  string ip = 2;
  string version = 3;
  string idc = 4;
  string region = 5;
}

message HBSRequest {
  int64 ts = 1;
}

message ConfigRequest {
  string key = 1;
  uint64 index    = 2;
}

message ConfigReply {
  string key      = 1; // key
  bytes  value    = 2; // value, 客户端自行解析
  uint64 index    = 3; // latest index
}

message CmdReply {
  string  id  = 1; // 命令唯一标识，后台生成
  Command cmd = 2; // 命令内容
}

message LogRequest {
  string id   = 1; // 任务唯一标识
  sint32 pc   = 2; // Deprecated, move inside Line
  Line   line = 3;
}

message MsgRequest {
  string id     = 1; // 任务唯一标识
  Body   body   = 4; // 消息体
  uint32 dt     = 5; // 数据类型
}
