// protoc -I . --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative xps/*.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.3
// source: xps/channel.proto

package xps

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Hostname      string                 `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"` // 主机名
	Ip            string                 `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Version       string                 `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	Idc           string                 `protobuf:"bytes,4,opt,name=idc,proto3" json:"idc,omitempty"`
	Region        string                 `protobuf:"bytes,5,opt,name=region,proto3" json:"region,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegRequest) Reset() {
	*x = RegRequest{}
	mi := &file_xps_channel_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegRequest) ProtoMessage() {}

func (x *RegRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xps_channel_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegRequest.ProtoReflect.Descriptor instead.
func (*RegRequest) Descriptor() ([]byte, []int) {
	return file_xps_channel_proto_rawDescGZIP(), []int{0}
}

func (x *RegRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *RegRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *RegRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *RegRequest) GetIdc() string {
	if x != nil {
		return x.Idc
	}
	return ""
}

func (x *RegRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

type HBSRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ts            int64                  `protobuf:"varint,1,opt,name=ts,proto3" json:"ts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HBSRequest) Reset() {
	*x = HBSRequest{}
	mi := &file_xps_channel_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HBSRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HBSRequest) ProtoMessage() {}

func (x *HBSRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xps_channel_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HBSRequest.ProtoReflect.Descriptor instead.
func (*HBSRequest) Descriptor() ([]byte, []int) {
	return file_xps_channel_proto_rawDescGZIP(), []int{1}
}

func (x *HBSRequest) GetTs() int64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

type ConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Index         uint64                 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigRequest) Reset() {
	*x = ConfigRequest{}
	mi := &file_xps_channel_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest) ProtoMessage() {}

func (x *ConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xps_channel_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest.ProtoReflect.Descriptor instead.
func (*ConfigRequest) Descriptor() ([]byte, []int) {
	return file_xps_channel_proto_rawDescGZIP(), []int{2}
}

func (x *ConfigRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ConfigRequest) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

type ConfigReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`      // key
	Value         []byte                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`  // value, 客户端自行解析
	Index         uint64                 `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"` // latest index
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigReply) Reset() {
	*x = ConfigReply{}
	mi := &file_xps_channel_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigReply) ProtoMessage() {}

func (x *ConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_xps_channel_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigReply.ProtoReflect.Descriptor instead.
func (*ConfigReply) Descriptor() ([]byte, []int) {
	return file_xps_channel_proto_rawDescGZIP(), []int{3}
}

func (x *ConfigReply) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ConfigReply) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *ConfigReply) GetIndex() uint64 {
	if x != nil {
		return x.Index
	}
	return 0
}

type CmdReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`   // 命令唯一标识，后台生成
	Cmd           *Command               `protobuf:"bytes,2,opt,name=cmd,proto3" json:"cmd,omitempty"` // 命令内容
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CmdReply) Reset() {
	*x = CmdReply{}
	mi := &file_xps_channel_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CmdReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CmdReply) ProtoMessage() {}

func (x *CmdReply) ProtoReflect() protoreflect.Message {
	mi := &file_xps_channel_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CmdReply.ProtoReflect.Descriptor instead.
func (*CmdReply) Descriptor() ([]byte, []int) {
	return file_xps_channel_proto_rawDescGZIP(), []int{4}
}

func (x *CmdReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CmdReply) GetCmd() *Command {
	if x != nil {
		return x.Cmd
	}
	return nil
}

type LogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`    // 任务唯一标识
	Pc            int32                  `protobuf:"zigzag32,2,opt,name=pc,proto3" json:"pc,omitempty"` // Deprecated, move inside Line
	Line          *Line                  `protobuf:"bytes,3,opt,name=line,proto3" json:"line,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogRequest) Reset() {
	*x = LogRequest{}
	mi := &file_xps_channel_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRequest) ProtoMessage() {}

func (x *LogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xps_channel_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogRequest.ProtoReflect.Descriptor instead.
func (*LogRequest) Descriptor() ([]byte, []int) {
	return file_xps_channel_proto_rawDescGZIP(), []int{5}
}

func (x *LogRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LogRequest) GetPc() int32 {
	if x != nil {
		return x.Pc
	}
	return 0
}

func (x *LogRequest) GetLine() *Line {
	if x != nil {
		return x.Line
	}
	return nil
}

type MsgRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`     // 任务唯一标识
	Body          *Body                  `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"` // 消息体
	Dt            uint32                 `protobuf:"varint,5,opt,name=dt,proto3" json:"dt,omitempty"`    // 数据类型
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MsgRequest) Reset() {
	*x = MsgRequest{}
	mi := &file_xps_channel_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MsgRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MsgRequest) ProtoMessage() {}

func (x *MsgRequest) ProtoReflect() protoreflect.Message {
	mi := &file_xps_channel_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MsgRequest.ProtoReflect.Descriptor instead.
func (*MsgRequest) Descriptor() ([]byte, []int) {
	return file_xps_channel_proto_rawDescGZIP(), []int{6}
}

func (x *MsgRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *MsgRequest) GetBody() *Body {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *MsgRequest) GetDt() uint32 {
	if x != nil {
		return x.Dt
	}
	return 0
}

var File_xps_channel_proto protoreflect.FileDescriptor

const file_xps_channel_proto_rawDesc = "" +
	"\n" +
	"\x11xps/channel.proto\x12\x03xps\x1a\x10xps/common.proto\"|\n" +
	"\n" +
	"RegRequest\x12\x1a\n" +
	"\bhostname\x18\x01 \x01(\tR\bhostname\x12\x0e\n" +
	"\x02ip\x18\x02 \x01(\tR\x02ip\x12\x18\n" +
	"\aversion\x18\x03 \x01(\tR\aversion\x12\x10\n" +
	"\x03idc\x18\x04 \x01(\tR\x03idc\x12\x16\n" +
	"\x06region\x18\x05 \x01(\tR\x06region\"\x1c\n" +
	"\n" +
	"HBSRequest\x12\x0e\n" +
	"\x02ts\x18\x01 \x01(\x03R\x02ts\"7\n" +
	"\rConfigRequest\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05index\x18\x02 \x01(\x04R\x05index\"K\n" +
	"\vConfigReply\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value\x12\x14\n" +
	"\x05index\x18\x03 \x01(\x04R\x05index\":\n" +
	"\bCmdReply\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1e\n" +
	"\x03cmd\x18\x02 \x01(\v2\f.xps.CommandR\x03cmd\"K\n" +
	"\n" +
	"LogRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x0e\n" +
	"\x02pc\x18\x02 \x01(\x11R\x02pc\x12\x1d\n" +
	"\x04line\x18\x03 \x01(\v2\t.xps.LineR\x04line\"K\n" +
	"\n" +
	"MsgRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\x04body\x18\x04 \x01(\v2\t.xps.BodyR\x04body\x12\x0e\n" +
	"\x02dt\x18\x05 \x01(\rR\x02dt2\x8e\x02\n" +
	"\bXService\x12.\n" +
	"\rRegisterAgent\x12\x0f.xps.RegRequest\x1a\n" +
	".xps.Empty\"\x00\x12*\n" +
	"\tReportHBS\x12\x0f.xps.HBSRequest\x1a\n" +
	".xps.Empty\"\x00\x120\n" +
	"\x06Config\x12\x12.xps.ConfigRequest\x1a\x10.xps.ConfigReply\"\x00\x12(\n" +
	"\aCommand\x12\n" +
	".xps.Empty\x1a\r.xps.CmdReply\"\x000\x01\x12$\n" +
	"\x03Log\x12\x0f.xps.LogRequest\x1a\n" +
	".xps.Empty\"\x00\x12$\n" +
	"\x03Msg\x12\x0f.xps.MsgRequest\x1a\n" +
	".xps.Empty\"\x00B&Z$github.com/xulei1234/x-proto/xps;xpsb\x06proto3"

var (
	file_xps_channel_proto_rawDescOnce sync.Once
	file_xps_channel_proto_rawDescData []byte
)

func file_xps_channel_proto_rawDescGZIP() []byte {
	file_xps_channel_proto_rawDescOnce.Do(func() {
		file_xps_channel_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_xps_channel_proto_rawDesc), len(file_xps_channel_proto_rawDesc)))
	})
	return file_xps_channel_proto_rawDescData
}

var file_xps_channel_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_xps_channel_proto_goTypes = []any{
	(*RegRequest)(nil),    // 0: xps.RegRequest
	(*HBSRequest)(nil),    // 1: xps.HBSRequest
	(*ConfigRequest)(nil), // 2: xps.ConfigRequest
	(*ConfigReply)(nil),   // 3: xps.ConfigReply
	(*CmdReply)(nil),      // 4: xps.CmdReply
	(*LogRequest)(nil),    // 5: xps.LogRequest
	(*MsgRequest)(nil),    // 6: xps.MsgRequest
	(*Command)(nil),       // 7: xps.Command
	(*Line)(nil),          // 8: xps.Line
	(*Body)(nil),          // 9: xps.Body
	(*Empty)(nil),         // 10: xps.Empty
}
var file_xps_channel_proto_depIdxs = []int32{
	7,  // 0: xps.CmdReply.cmd:type_name -> xps.Command
	8,  // 1: xps.LogRequest.line:type_name -> xps.Line
	9,  // 2: xps.MsgRequest.body:type_name -> xps.Body
	0,  // 3: xps.XService.RegisterAgent:input_type -> xps.RegRequest
	1,  // 4: xps.XService.ReportHBS:input_type -> xps.HBSRequest
	2,  // 5: xps.XService.Config:input_type -> xps.ConfigRequest
	10, // 6: xps.XService.Command:input_type -> xps.Empty
	5,  // 7: xps.XService.Log:input_type -> xps.LogRequest
	6,  // 8: xps.XService.Msg:input_type -> xps.MsgRequest
	10, // 9: xps.XService.RegisterAgent:output_type -> xps.Empty
	10, // 10: xps.XService.ReportHBS:output_type -> xps.Empty
	3,  // 11: xps.XService.Config:output_type -> xps.ConfigReply
	4,  // 12: xps.XService.Command:output_type -> xps.CmdReply
	10, // 13: xps.XService.Log:output_type -> xps.Empty
	10, // 14: xps.XService.Msg:output_type -> xps.Empty
	9,  // [9:15] is the sub-list for method output_type
	3,  // [3:9] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_xps_channel_proto_init() }
func file_xps_channel_proto_init() {
	if File_xps_channel_proto != nil {
		return
	}
	file_xps_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_xps_channel_proto_rawDesc), len(file_xps_channel_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_xps_channel_proto_goTypes,
		DependencyIndexes: file_xps_channel_proto_depIdxs,
		MessageInfos:      file_xps_channel_proto_msgTypes,
	}.Build()
	File_xps_channel_proto = out.File
	file_xps_channel_proto_goTypes = nil
	file_xps_channel_proto_depIdxs = nil
}
